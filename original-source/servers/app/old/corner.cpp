//******************************************************************************
//
//	File:		corner.cpp
//
//	Description:	Corner view class.
//	
//	Written by:	Benoit Schillings
//
//	Copyright 1993, Be Incorporated
//
//	Change History:
//
//	10/27/93	bgs	new style
//
//******************************************************************************
 
#ifndef	GR_TYPES_H
#include "gr_types.h"
#endif

#ifndef	MACRO_H
#include "macro.h"
#endif

#ifndef	PROTO_H
#include "proto.h"
#endif

#ifndef	SERVER_H
#include "server.h"
#endif

#ifndef	MWINDOW_H
#include "mwindow.h"
#endif

#ifndef	CORNER_H
#include "corner.h"
#endif

#ifndef	RENDER_H
#include "render.h"
#endif

#define _NEW_RESIZE_ 1
#if _NEW_RESIZE_

#define WIDTH	(16)
#define HEIGHT	(16)

unsigned char color_resize[] = {
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,
0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfc,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,
0xf9,0x5d,0xf9,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfc,0xf9,0xf9,0xfc,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,
0xf9,0x5d,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfc,0xf9,0xf9,0xfc,0xf9,0xf9,0xfc,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0xf9,0xf9,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,0xf9,0x5d,0xf9,
0xf9,0x5d,0xf9,0xf9,0x5d,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,0x5d,0xf9,0xf9,0xf9,
0xfc,0xf9,0xf9,0xfc,0xf9,0xf9,0xfc,0xf9,0xf9,0xfc,0xf9,0xf9,0x5d,0xf9,0xf9,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,0xf9,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0x5d,
0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d};
unsigned char bw_resize[] = {
0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0xc,0x1b,
0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x3f,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x1b,0x1b,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0xc,0x1b,
0x1b,0xc,0x1b,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x3f,0x1b,0x1b,0x3f,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0xc,0x1b,
0x1b,0xc,0x1b,0x1b,0xc,0x1b,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,
0x3f,0x1b,0x1b,0x3f,0x1b,0x1b,0x3f,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,
0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x1b,0x1b,0xc,0x1b,
0x1b,0xc,0x1b,0x1b,0xc,0x1b,0x1b,0xc,0x1b,0x1b,0x1b,0x17,0x1b,0x1b,0x1b,
0x3f,0x1b,0x1b,0x3f,0x1b,0x1b,0x3f,0x1b,0x1b,0x3f,0x1b,0x1b,0x17,0x1b,0x1b,
0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x1b,
0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,
0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17};
unsigned char bw_mask_resize[] = {
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc,0xff,
0xff,0xc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x3f,0xff,0xff,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc,0xff,
0xff,0xc,0xff,0xff,0xc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x3f,0xff,0xff,0x3f,0xff,0xff,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc,0xff,
0xff,0xc,0xff,0xff,0xc,0xff,0xff,0xc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x3f,0xff,0xff,0x3f,0xff,0xff,0x3f,0xff,0xff,0x3f,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};

#else

#define WIDTH	(14 - 1)
#define HEIGHT	(14 - 1)

unsigned char NORMAL_BOX[] = {
0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,
0x13,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x17,0x17,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x0c,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x0c,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x0c,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x0c,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x17,0x17,0x17,0x17,0x17,0x17,0x0c,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x17,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x17,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x3f,0x3f,
0x13,0x3f,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x3f,0x3f};

unsigned char DISABLED_BOX[] = {
0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,
0x13,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x18,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x18,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x18,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x18,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x18,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x18,0x18,0x18,0x18,0x18,0x18,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x17,0x3f,0x3f,
0x13,0x3f,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x3f,0x3f};
#endif

//------------------------------------------------------------

TCorner::TCorner(rect* bnd, unsigned long flags)
 : TView(bnd, flags | FULL_DRAW | FAST, vfWillDraw|vfNeedsHilite)
{
	bits.h = HEIGHT;
	bits.w = WIDTH;
	bits.bytesPerRow = bits.w;
	bits.colorMap = (ColorMap*)system_cs->color_list;
	bits.pixelFormat = PIX_8BIT;
	bits.endianess = LENDIAN;
	m_rFlags = 0;
}

//------------------------------------------------------------

TCorner::~TCorner()
{
}

//------------------------------------------------------------------------------

#include <Debug.h>

extern bool	are_frames_colored[2];
extern bool	use_default_frame_colors[2];
static rgb_color white = {255, 255, 255, 0};
static rgb_color disabled = {232, 232, 232, 0};

void TCorner::Draw()
{
	rect r;
	bool enabled = Owner()->looks_active();

	get_bound(&r);

#if _NEW_RESIZE_

	grLock(renderContext);

		grSetDrawOp(renderContext,OP_COPY);
		grSetForeColor(renderContext,wdef_standard_gray);
		grStrokeILine(renderContext, r.left, r.top, r.right, r.top);
		grStrokeILine(renderContext, r.left, r.top, r.left, r.bottom);
		r.top++; r.left++;
		if (enabled)
			grSetForeColor(renderContext,FrameColor(LIGHT_BACK_COLOR,Owner()));
		else
			grSetForeColor(renderContext,white);

	grUnlock(renderContext);
	grLock(renderContext);

		grStrokeILine(renderContext, r.left, r.top, r.right, r.top);
		grStrokeILine(renderContext, r.left, r.top, r.left, r.bottom);
		r.top++; r.left++;

		if (!enabled) {
			grSetForeColor(renderContext,disabled);
			grFillIRect(renderContext,r);
			goto unlock;
		};

	grUnlock(renderContext);
	grLock(renderContext);

		if (are_frames_colored[0] && use_default_frame_colors[0]) {
			bits.pixelData = color_resize;
		} else {
			if (are_frames_colored[0] && !use_default_frame_colors[0]) {
				grSetDrawOp(renderContext,OP_BLEND);
				grSetForeColor(renderContext,FrameColor(BACK_COLOR, Owner()));
				r.bottom = r.top + WIDTH;
				r.right = r.left + (((WIDTH + 7) & 0xfff8) - 1);
				grFillIRect(renderContext,r);
				bits.pixelData = bw_mask_resize;
			} else
				bits.pixelData = bw_resize;
		}

		grDrawLocPixels(renderContext,r.left,r.top,&bits);

unlock:
	
	grUnlock(renderContext);

#else

	r.bottom = r.top + WIDTH;
	r.right = r.left + (((WIDTH + 7) & 0xfff8) - 1);
	if (Owner()->looks_active())
		f_bits->base = NORMAL_BOX;
	else
		f_bits->base = DISABLED_BOX;

	blit_ns(f_bits, get_port(), &f_bits->bbox, &r, op_copy);

#endif
}

//------------------------------------------------------------
	
void	TCorner::plot_arrow(rect r, long v)
{
}

